import numpy as np
import pickle
from keras.models import load_model

# Load the model
model = load_model('/Users/vanshika/PycharmProjects/Language Classification/language_classification_model.h5')

# Load the label encoder
with open('label_encoder.pkl', 'rb') as f:
    label_encoder = pickle.load(f)

# Load some test data
input_features = [-390.2272644042969, 152.47598266601562, -2.9894440174102783, -4.180863380432129, 13.33270263671875, 3.9444684982299805, -9.564915657043457, 0.06713710725307465, -7.387233734130859, -21.350751876831055, -9.870356559753418, -2.132660150527954, -6.431110858917236, -4.039889812469482, 1.7453700304031372, -8.147133827209473, -8.391035079956055, 1.264025330543518, -1.4749739170074463, -4.8962225914001465, 0.6962077021598816, -0.6849833726882935, -10.182934761047363, -6.735576152801514, 0.584092378616333, 0.6966602802276611, -2.727712392807007, -1.4150290489196777, -2.0733869075775146, -6.847616195678711, -2.465003490447998, 0.8761810064315796, -1.3099725246429443, -3.4827377796173096, -3.8286681175231934, -4.722780227661133, -4.117932319641113, -0.644265353679657, -1.071301817893982, -3.3490183353424072]
# input_features = [-388.5062255859375, 101.92092895507812, -3.6637160778045654, 28.834686279296875, -12.777580261230469, 26.70009422302246, -14.45694351196289, 2.132399797439575, -8.068228721618652, -19.08650016784668, -1.9375776052474976, -13.456568717956543, -0.6909242868423462, -0.4520840048789978, -1.7969417572021484, -4.842585563659668, -6.5568528175354, -6.244768142700195, 1.4780774116516113, -4.945237159729004, -5.440799713134766, -1.4425911903381348, -4.428900241851807, -5.677184581756592, -7.43369722366333, -4.121329307556152, -4.0806097984313965, -1.8673192262649536, -6.056924819946289, -0.3150477409362793, -3.410501718521118, -4.8398261070251465, -4.190784454345703, -6.985573768615723, 0.06032897159457207, -5.411832332611084, -2.9898452758789062, -1.6847795248031616, -2.186115026473999, -0.6429855227470398]
# input_features = [-445.5205383300781, 132.8393096923828, 17.66617202758789, 3.126152515411377, 1.3842941522598267, -1.9973255395889282, -2.455094337463379, -0.2535828649997711, -11.404413223266602, -10.851232528686523, -6.853892803192139, -5.472820281982422, -8.681203842163086, -3.8231112957000732, -5.010607719421387, -8.562174797058105, -0.5036389231681824, -4.12358283996582, -8.339251518249512, -7.237908840179443, -4.5960493087768555, -5.621633052825928, -7.8797688484191895, -6.0658392906188965, -2.762045383453369, -5.419668674468994, -7.090349197387695, -4.447352409362793, -3.6916184425354004, -5.475593566894531, -4.6263604164123535, -3.500290870666504, -6.179208755493164, -4.367888450622559, -2.6838605403900146, -3.5644941329956055, -3.1028542518615723, -2.8160693645477295, -4.040307521820068, -2.080522060394287]




# Reshape to match the expected input shape
input_features = np.array(input_features).reshape((1, len(input_features)))
# Make predictions
predictions = model.predict(input_features)
# Decode the predictions
predicted_language_indices = np.argmax(predictions, axis=1)
predicted_languages = label_encoder[predicted_language_indices]

# Print the predictions
for language in predicted_languages:
    print(language)